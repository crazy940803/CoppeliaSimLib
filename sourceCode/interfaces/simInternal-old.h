simInt simGetMaterialId_internal(const simChar* materialName);
simInt simGetShapeMaterial_internal(simInt shapeHandle);
simInt simHandleVarious_internal();
simInt simSerialPortOpen_internal(simInt portNumber,simInt baudRate,simVoid* reserved1,simVoid* reserved2);
simInt simSerialPortClose_internal(simInt portNumber);
simInt simSerialPortSend_internal(simInt portNumber,const simChar* data,simInt dataLength);
simInt simSerialPortRead_internal(simInt portNumber,simChar* buffer,simInt dataLengthToRead);
simInt simGetPathPlanningHandle_internal(const simChar* pathPlanningObjectName);
simInt simGetMotionPlanningHandle_internal(const simChar* motionPlanningObjectName);
simInt simGetMpConfigForTipPose_internal(simInt motionPlanningObjectHandle,simInt options,simFloat closeNodesDistance,simInt trialCount,const simFloat* tipPose,simInt maxTimeInMs,simFloat* outputJointPositions,const simFloat* referenceConfigs,simInt referenceConfigCount,const simFloat* jointWeights,const simInt* jointBehaviour,simInt correctionPasses);
simFloat* simFindMpPath_internal(simInt motionPlanningObjectHandle,const simFloat* startConfig,const simFloat* goalConfig,simInt options,simFloat stepSize,simInt* outputConfigsCnt,simInt maxTimeInMs,simFloat* reserved,const simInt* auxIntParams,const simFloat* auxFloatParams);
simFloat* simSimplifyMpPath_internal(simInt motionPlanningObjectHandle,const simFloat* pathBuffer,simInt configCnt,simInt options,simFloat stepSize,simInt increment,simInt* outputConfigsCnt,simInt maxTimeInMs,simFloat* reserved,const simInt* auxIntParams,const simFloat* auxFloatParams);
simFloat* simFindIkPath_internal(simInt motionPlanningObjectHandle,const simFloat* startConfig,const simFloat* goalPose,simInt options,simFloat stepSize,simInt* outputConfigsCnt,simFloat* reserved,const simInt* auxIntParams,const simFloat* auxFloatParams);
simFloat* simGetMpConfigTransition_internal(simInt motionPlanningObjectHandle,const simFloat* startConfig,const simFloat* goalConfig,simInt options,const simInt* select,simFloat calcStepSize,simFloat maxOutStepSize,simInt wayPointCnt,const simFloat* wayPoints,simInt* outputConfigsCnt,const simInt* auxIntParams,const simFloat* auxFloatParams);
simInt simCreateMotionPlanning_internal(simInt jointCnt,const simInt* jointHandles,const simInt* jointRangeSubdivisions,const simFloat* jointMetricWeights,simInt options,const simInt* intParams,const simFloat* floatParams,const simVoid* reserved);
simInt simRemoveMotionPlanning_internal(simInt motionPlanningHandle);
simInt simSearchPath_internal(simInt pathPlanningObjectHandle,simFloat maximumSearchTime);
simInt simInitializePathSearch_internal(simInt pathPlanningObjectHandle,simFloat maximumSearchTime,simFloat searchTimeStep);
simInt simPerformPathSearchStep_internal(simInt temporaryPathSearchObject,simBool abortSearch);
simInt simLockInterface_internal(simBool locked);
simInt simCopyPasteSelectedObjects_internal();
simInt simResetPath_internal(simInt pathHandle);
simInt simHandlePath_internal(simInt pathHandle,simFloat deltaTime);
simInt simResetJoint_internal(simInt jointHandle);
simInt simHandleJoint_internal(simInt jointHandle,simFloat deltaTime);
simInt simAppendScriptArrayEntry_internal(const simChar* reservedSetToNull,simInt scriptHandleOrType,const simChar* arrayNameAtScriptName,const simChar* keyName,const simChar* data,const simInt* what);
simInt simClearScriptVariable_internal(const simChar* reservedSetToNull,simInt scriptHandleOrType,const simChar* variableNameAtScriptName);
simVoid _simGetJointOdeParameters_internal(const simVoid* joint,simFloat* stopERP,simFloat* stopCFM,simFloat* bounce,simFloat* fudge,simFloat* normalCFM);
simVoid _simGetJointBulletParameters_internal(const simVoid* joint,simFloat* stopERP,simFloat* stopCFM,simFloat* normalCFM);
simVoid _simGetOdeMaxContactFrictionCFMandERP_internal(const simVoid* geomInfo,simInt* maxContacts,simFloat* friction,simFloat* cfm,simFloat* erp);
simBool _simGetBulletCollisionMargin_internal(const simVoid* geomInfo,simFloat* margin,simInt* otherProp);
simBool _simGetBulletStickyContact_internal(const simVoid* geomInfo);
simFloat _simGetBulletRestitution_internal(const simVoid* geomInfo);
simVoid _simGetVortexParameters_internal(const simVoid* object,simInt version,simFloat* floatParams,simInt* intParams);
simVoid _simGetNewtonParameters_internal(const simVoid* object,simInt* version,simFloat* floatParams,simInt* intParams);
simVoid _simGetDamping_internal(const simVoid* geomInfo,simFloat* linDamping,simFloat* angDamping);
simFloat _simGetFriction_internal(const simVoid* geomInfo);
simInt simAddSceneCustomData_internal(simInt header,const simChar* data,simInt dataLength);
simInt simGetSceneCustomDataLength_internal(simInt header);
simInt simGetSceneCustomData_internal(simInt header,simChar* data);
simInt simAddObjectCustomData_internal(simInt objectHandle,simInt header,const simChar* data,simInt dataLength);
simInt simGetObjectCustomDataLength_internal(simInt objectHandle,simInt header);
simInt simGetObjectCustomData_internal(simInt objectHandle,simInt header,simChar* data);
simInt simCreateUI_internal(const simChar* uiName,simInt menuAttributes,const simInt* clientSize,const simInt* cellSize,simInt* buttonHandles);
simInt simCreateUIButton_internal(simInt uiHandle,const simInt* position,const simInt* size,simInt buttonProperty);
simInt simGetUIHandle_internal(const simChar* uiName);
simInt simGetUIProperty_internal(simInt uiHandle);
simInt simGetUIEventButton_internal(simInt uiHandle,simInt* auxiliaryValues);
simInt simSetUIProperty_internal(simInt uiHandle,simInt elementProperty);
simInt simGetUIButtonProperty_internal(simInt uiHandle,simInt buttonHandle);
simInt simSetUIButtonProperty_internal(simInt uiHandle,simInt buttonHandle,simInt buttonProperty);
simInt simGetUIButtonSize_internal(simInt uiHandle,simInt buttonHandle,simInt* size);
simInt simSetUIButtonLabel_internal(simInt uiHandle,simInt buttonHandle,const simChar* upStateLabel,const simChar* downStateLabel);
simChar* simGetUIButtonLabel_internal(simInt uiHandle,simInt buttonHandle);
simInt simSetUISlider_internal(simInt uiHandle,simInt buttonHandle,simInt position);
simInt simGetUISlider_internal(simInt uiHandle,simInt buttonHandle);
simInt simSetUIButtonColor_internal(simInt uiHandle,simInt buttonHandle,const simFloat* upStateColor,const simFloat* downStateColor,const simFloat* labelColor);
simInt simSetUIButtonTexture_internal(simInt uiHandle,simInt buttonHandle,const simInt* size,const simChar* textureData);
simInt simCreateUIButtonArray_internal(simInt uiHandle,simInt buttonHandle);
simInt simSetUIButtonArrayColor_internal(simInt uiHandle,simInt buttonHandle,const simInt* position,const simFloat* color);
simInt simDeleteUIButtonArray_internal(simInt uiHandle,simInt buttonHandle);
simInt simRemoveUI_internal(simInt uiHandle);
simInt simSetUIPosition_internal(simInt uiHandle,const simInt* position);
simInt simGetUIPosition_internal(simInt uiHandle,simInt* position);
simInt simLoadUI_internal(const simChar* filename,int maxCount,int* uiHandles);
simInt simSaveUI_internal(int count,const int* uiHandles,const simChar* filename);
simInt simHandleGeneralCallbackScript_internal(simInt callbackId,simInt callbackTag,simVoid* additionalData);
simInt simRegisterCustomLuaFunction_internal(const simChar* funcName,const simChar* callTips,const simInt* inputArgumentTypes,simVoid(*callBack)(struct SLuaCallBack* p));
simInt simRegisterContactCallback_internal(simInt(*callBack)(simInt,simInt,simInt,simInt*,simFloat*));
simInt simRegisterJointCtrlCallback_internal(simInt(*callBack)(simInt,simInt,simInt,const simInt*,const simFloat*,simFloat*));
simInt simGetMechanismHandle_internal(const simChar* mechanismName);
simInt simHandleMechanism_internal(simInt mechanismHandle);
simInt simHandleCustomizationScripts_internal(simInt callType);
simInt simCallScriptFunction_internal(simInt scriptHandleOrType,const simChar* functionNameAtScriptName,SLuaCallBack* data,const simChar* reservedSetToNull);
simInt simSetVisionSensorFilter_internal(simInt visionSensorHandle,simInt filterIndex,simInt options,const simInt* pSizes,const simUChar* bytes,const simInt* ints,const simFloat* floats,const simUChar* custom);
simInt simGetVisionSensorFilter_internal(simInt visionSensorHandle,simInt filterIndex,simInt* options,simInt* pSizes,simUChar** bytes,simInt** ints,simFloat** floats,simUChar** custom);
simChar* simGetScriptSimulationParameter_internal(simInt scriptHandle,const simChar* parameterName,simInt* parameterLength);
simInt simSetScriptSimulationParameter_internal(simInt scriptHandle,const simChar* parameterName,const simChar* parameterValue,simInt parameterLength);
simInt simGetNameSuffix_internal(const simChar* name);
simInt simSetNameSuffix_internal(simInt nameSuffixNumber);
simInt simAddStatusbarMessage_internal(const simChar* message);
simChar* simGetScriptRawBuffer_internal(simInt scriptHandle,simInt bufferHandle);
simInt simSetScriptRawBuffer_internal(simInt scriptHandle,const simChar* buffer,simInt bufferSize);
simInt simReleaseScriptRawBuffer_internal(simInt scriptHandle,simInt bufferHandle);
simInt simSetShapeMassAndInertia_internal(simInt shapeHandle,simFloat mass,const simFloat* inertiaMatrix,const simFloat* centerOfMass,const simFloat* transformation);
simInt simGetShapeMassAndInertia_internal(simInt shapeHandle,simFloat* mass,simFloat* inertiaMatrix,simFloat* centerOfMass,const simFloat* transformation);
simInt simCheckIkGroup_internal(simInt ikGroupHandle,simInt jointCnt,const simInt* jointHandles,simFloat* jointValues,const simInt* jointOptions);
simInt simCreateIkGroup_internal(simInt options,const simInt* intParams,const simFloat* floatParams,const simVoid* reserved);
simInt simRemoveIkGroup_internal(simInt ikGroupHandle);
simInt simCreateIkElement_internal(simInt ikGroupHandle,simInt options,const simInt* intParams,const simFloat* floatParams,const simVoid* reserved);
simInt simExportIk_internal(const simChar* pathAndFilename,simInt reserved1,simVoid* reserved2);
simInt simComputeJacobian_internal(simInt ikGroupHandle,simInt options,simVoid* reserved);
simInt simGetConfigForTipPose_internal(simInt ikGroupHandle,simInt jointCnt,const simInt* jointHandles,simFloat thresholdDist,simInt maxTimeInMs,simFloat* retConfig,const simFloat* metric,simInt collisionPairCnt,const simInt* collisionPairs,const simInt* jointOptions,const simFloat* lowLimits,const simFloat* ranges,simVoid* reserved);
simFloat* simGenerateIkPath_internal(simInt ikGroupHandle,simInt jointCnt,const simInt* jointHandles,simInt ptCnt,simInt collisionPairCnt,const simInt* collisionPairs,const simInt* jointOptions,simVoid* reserved);
simInt simGetIkGroupHandle_internal(const simChar* ikGroupName);
simFloat* simGetIkGroupMatrix_internal(simInt ikGroupHandle,simInt options,simInt* matrixSize);
simInt simHandleIkGroup_internal(simInt ikGroupHandle);
simInt simSetIkGroupProperties_internal(simInt ikGroupHandle,simInt resolutionMethod,simInt maxIterations,simFloat damping,void* reserved);
simInt simSetIkElementProperties_internal(simInt ikGroupHandle,simInt tipDummyHandle,simInt constraints,const simFloat* precision,const simFloat* weight,void* reserved);
simInt simSetThreadIsFree_internal(simBool freeMode);
simInt simTubeOpen_internal(simInt dataHeader,const simChar* dataName,simInt readBufferSize,simBool notUsedButKeepZero);
simInt simTubeClose_internal(simInt tubeHandle);
simInt simTubeWrite_internal(simInt tubeHandle,const simChar* data,simInt dataLength);
simChar* simTubeRead_internal(simInt tubeHandle,simInt* dataLength);
simInt simTubeStatus_internal(simInt tubeHandle,simInt* readPacketsCount,simInt* writePacketsCount);
simInt simSendData_internal(simInt targetID,simInt dataHeader,const simChar* dataName,const simChar* data,simInt dataLength,simInt antennaHandle,simFloat actionRadius,simFloat emissionAngle1,simFloat emissionAngle2,simFloat persistence);
simChar* simReceiveData_internal(simInt dataHeader,const simChar* dataName,simInt antennaHandle,simInt index,simInt* dataLength,simInt* senderID,simInt* dataHeaderR,simChar** dataNameR);
simInt simGetPositionOnPath_internal(simInt pathHandle,simFloat relativeDistance,simFloat* position);
simInt simGetOrientationOnPath_internal(simInt pathHandle,simFloat relativeDistance,simFloat* eulerAngles);
simInt simGetDataOnPath_internal(simInt pathHandle,simFloat relativeDistance,simInt dataType,simInt* intData,simFloat* floatData);
simInt simGetClosestPositionOnPath_internal(simInt pathHandle,simFloat* absolutePosition,simFloat* pathPosition);
simInt simGetPathPosition_internal(simInt objectHandle,simFloat* position);
simInt simSetPathPosition_internal(simInt objectHandle,simFloat position);
simInt simGetPathLength_internal(simInt objectHandle,simFloat* length);
simInt simCreatePath_internal(simInt attributes,const simInt* intParams,const simFloat* floatParams,const simFloat* color);
simInt simInsertPathCtrlPoints_internal(simInt pathHandle,simInt options,simInt startIndex,simInt ptCnt,const simVoid* ptData);
simInt simCutPathCtrlPoints_internal(simInt pathHandle,simInt startIndex,simInt ptCnt);
simInt simGetThreadId_internal();
simInt simSwitchThread_internal();
simInt simLockResources_internal(simInt lockType,simInt reserved);
simInt simUnlockResources_internal(simInt lockHandle);
simChar* simGetUserParameter_internal(simInt objectHandle,const simChar* parameterName,simInt* parameterLength);
simInt simSetUserParameter_internal(simInt objectHandle,const simChar* parameterName,const simChar* parameterValue,simInt parameterLength);
simInt simSetPathTargetNominalVelocity_internal(simInt objectHandle,simFloat targetNominalVelocity);
simInt simGetCollectionHandle_internal(const simChar* collectionName);
simInt simRemoveCollection_internal(simInt collectionHandle);
simInt simEmptyCollection_internal(simInt collectionHandle);
simChar* simGetCollectionName_internal(simInt collectionHandle);
simInt simSetCollectionName_internal(simInt collectionHandle,const simChar* collectionName);
simInt simCreateCollection_internal(const simChar* collectionName,simInt options);
simInt simAddObjectToCollection_internal(simInt collectionHandle,simInt objectHandle,simInt what,simInt options);
simInt simGetCollisionHandle_internal(const simChar* collisionObjectName);
simInt simGetDistanceHandle_internal(const simChar* distanceObjectName);
simInt simResetCollision_internal(simInt collisionObjectHandle);
simInt simResetDistance_internal(simInt distanceObjectHandle);
simInt simHandleCollision_internal(simInt collisionObjectHandle);
simInt simReadCollision_internal(simInt collisionObjectHandle);
simInt simHandleDistance_internal(simInt distanceObjectHandle,simFloat* smallestDistance);
simInt simReadDistance_internal(simInt distanceObjectHandle,simFloat* smallestDistance);
simInt simAddBanner_internal(const simChar* label,simFloat size,simInt options,const simFloat* positionAndEulerAngles,simInt parentObjectHandle,const simFloat* labelColors,const simFloat* backgroundColors);
simInt simRemoveBanner_internal(simInt bannerID);
simInt simAddGhost_internal(simInt ghostGroup,simInt objectHandle,simInt options,simFloat startTime,simFloat endTime,const simFloat* color);
simInt simModifyGhost_internal(simInt ghostGroup,simInt ghostId,simInt operation,simFloat floatValue,simInt options,simInt optionsMask,const simFloat* colorOrTransformation);
simInt simSetGraphUserData_internal(simInt graphHandle,const simChar* streamName,simFloat data);
simInt simAddPointCloud_internal(simInt pageMask,simInt layerMask,simInt objectHandle,simInt options,simFloat pointSize,simInt ptCnt,const simFloat* pointCoordinates,const simChar* defaultColors,const simChar* pointColors,const simFloat* pointNormals);
simInt simModifyPointCloud_internal(simInt pointCloudHandle,simInt operation,const simInt* intParam,const simFloat* floatParam);
simInt simCopyMatrix_internal(const simFloat* matrixIn,simFloat* matrixOut);
simInt simAddModuleMenuEntry_internal(const simChar* entryLabel,simInt itemCount,simInt* itemHandles);
simInt simSetModuleMenuItemState_internal(simInt itemHandle,simInt state,const simChar* label);
simChar* simGetObjectName_internal(simInt objectHandle);
simInt simSetObjectName_internal(simInt objectHandle,const simChar* objectName);
simChar* simGetScriptName_internal(simInt scriptHandle);
simInt simGetScriptHandle_internal(const simChar* scriptName);
simInt simSetScriptVariable_internal(simInt scriptHandleOrType,const simChar* variableNameAtScriptName,simInt stackHandle);
simInt simGetScript_internal(simInt index);
simInt simGetScriptAssociatedWithObject_internal(simInt objectHandle);
simInt simGetCustomizationScriptAssociatedWithObject_internal(simInt objectHandle);
simInt simGetObjectAssociatedWithScript_internal(simInt scriptHandle);
simChar* simGetObjectConfiguration_internal(simInt objectHandle);
simInt simSetObjectConfiguration_internal(const simChar* data);
simChar* simGetConfigurationTree_internal(simInt objectHandle);
simInt simSetConfigurationTree_internal(const simChar* data);
simInt simEnableEventCallback_internal(simInt eventCallbackType,const simChar* plugin,simInt reserved);
simInt simRMLPosition_internal(simInt dofs,simDouble timeStep,simInt flags,const simDouble* currentPosVelAccel,const simDouble* maxVelAccelJerk,const simBool* selection,const simDouble* targetPosVel,simDouble* newPosVelAccel,simVoid* auxData);
simInt simRMLVelocity_internal(simInt dofs,simDouble timeStep,simInt flags,const simDouble* currentPosVelAccel,const simDouble* maxAccelJerk,const simBool* selection,const simDouble* targetVel,simDouble* newPosVelAccel,simVoid* auxData);
simInt simRMLPos_internal(simInt dofs,simDouble smallestTimeStep,simInt flags,const simDouble* currentPosVelAccel,const simDouble* maxVelAccelJerk,const simBool* selection,const simDouble* targetPosVel,simVoid* auxData);
simInt simRMLVel_internal(simInt dofs,simDouble smallestTimeStep,simInt flags,const simDouble* currentPosVelAccel,const simDouble* maxAccelJerk,const simBool* selection,const simDouble* targetVel,simVoid* auxData);
simInt simRMLStep_internal(simInt handle,simDouble timeStep,simDouble* newPosVelAccel,simVoid* auxData,simVoid* reserved);
simInt simRMLRemove_internal(simInt handle);
simChar* simFileDialog_internal(simInt mode,const simChar* title,const simChar* startPath,const simChar* initName,const simChar* extName,const simChar* ext);
simInt simMsgBox_internal(simInt dlgType,simInt buttons,const simChar* title,const simChar* message);
simInt simDisplayDialog_internal(const simChar* titleText,const simChar* mainText,simInt dialogType,const simChar* initialText,const simFloat* titleColors,const simFloat* dialogColors,simInt* elementHandle);
simInt simGetDialogResult_internal(simInt genericDialogHandle);
simChar* simGetDialogInput_internal(simInt genericDialogHandle);
simInt simEndDialog_internal(simInt genericDialogHandle);
simInt simIsObjectInSelection_internal(simInt objectHandle);
simInt simAddObjectToSelection_internal(simInt what,simInt objectHandle);
simInt simRemoveObjectFromSelection_internal(simInt what,simInt objectHandle);
simInt simGetObjectSelectionSize_internal();
simInt simGetObjectLastSelection_internal();
simInt simGetObjectSelection_internal(simInt* objectHandles);
simInt simScaleSelectedObjects_internal(simFloat scalingFactor,simBool scalePositionsToo);
simInt simDeleteSelectedObjects_internal();
simInt simGetObjectUniqueIdentifier_internal(simInt objectHandle,simInt* uniqueIdentifier);
simVoid _simSetDynamicJointLocalTransformationPart2_internal(simVoid* joint,const simFloat* pos,const simFloat* quat);
simVoid _simSetDynamicForceSensorLocalTransformationPart2_internal(simVoid* forceSensor,const simFloat* pos,const simFloat* quat);
simVoid _simSetDynamicJointLocalTransformationPart2IsValid_internal(simVoid* joint,simBool valid);
simVoid _simSetDynamicForceSensorLocalTransformationPart2IsValid_internal(simVoid* forceSensor,simBool valid);
simInt simBreakForceSensor_internal(simInt objectHandle);
simBool _simIsForceSensorBroken_internal(const simVoid* forceSensor);
simVoid _simGetDynamicForceSensorLocalTransformationPart2_internal(const simVoid* forceSensor,simFloat* pos,simFloat* quat);
simInt simGetJointMatrix_internal(simInt objectHandle,simFloat* matrix);
simInt simSetSphericalJointMatrix_internal(simInt objectHandle,const simFloat* matrix);
simInt simGetObjectHandleEx_internal(const simChar* objectAlias,simInt index,simInt proxy,simInt options);
simInt simSetScriptAttribute_internal(simInt scriptHandle,simInt attributeID,simFloat floatVal,simInt intOrBoolVal);
simInt simGetScriptAttribute_internal(simInt scriptHandle,simInt attributeID,simFloat* floatVal,simInt* intOrBoolVal);
simInt simSetScriptText_internal(simInt scriptHandle,const simChar* scriptText);
const simChar* simGetScriptText_internal(simInt scriptHandle);
simInt simGetScriptProperty_internal(simInt scriptHandle,simInt* scriptProperty,simInt* associatedObjectHandle);
simInt simGetJointMaxForce_internal(simInt jointHandle,simFloat* forceOrTorque);
simInt simSetJointMaxForce_internal(simInt objectHandle,simFloat forceOrTorque);
simVoid _simSetGeomProxyDynamicsFullRefreshFlag_internal(simVoid* geomData,simBool flag);
simBool _simGetGeomProxyDynamicsFullRefreshFlag_internal(const simVoid* geomData);
simInt simRemoveObject_internal(simInt objectHandle);
simUInt simGetSystemTimeInMs_internal(simInt previousTime);
simInt simGetVisionSensorResolution_internal(simInt visionSensorHandle,simInt* resolution);
simFloat* simGetVisionSensorImage_internal(simInt visionSensorHandle);
simUChar* simGetVisionSensorCharImage_internal(simInt visionSensorHandle,simInt* resolutionX,simInt* resolutionY);
simInt simSetVisionSensorImage_internal(simInt visionSensorHandle,const simFloat* image);
simInt simSetVisionSensorCharImage_internal(simInt visionSensorHandle,const simUChar* image);
simFloat* simGetVisionSensorDepthBuffer_internal(simInt visionSensorHandle);
simInt simCreatePureShape_internal(simInt primitiveType,simInt options,const simFloat* sizes,simFloat mass,const simInt* precision);
simVoid* simBroadcastMessage_internal(simInt* auxiliaryData,simVoid* customData,simInt* replyData);
simVoid* simSendModuleMessage_internal(simInt message,simInt* auxiliaryData,simVoid* customData,simInt* replyData);
simInt simBuildMatrixQ_internal(const simFloat* position,const simFloat* quaternion,simFloat* matrix);
simInt simGetQuaternionFromMatrix_internal(const simFloat* matrix,simFloat* quaternion);
simVoid _simGetPrincipalMomentOfInertia_internal(const simVoid* geomInfo,simFloat* inertia);
simVoid _simGetLocalInertiaFrame_internal(const simVoid* geomInfo,simFloat* pos,simFloat* quat);
simInt simSetDoubleSignalOld_internal(const simChar* signalName,simDouble signalValue);
simInt simGetDoubleSignalOld_internal(const simChar* signalName,simDouble* signalValue);
simInt simClearDoubleSignalOld_internal(const simChar* signalName);
simInt simGetShapeVertex_internal(simInt shapeHandle,simInt groupElementIndex,simInt vertexIndex,simFloat* relativePosition);
simInt simGetShapeTriangle_internal(simInt shapeHandle,simInt groupElementIndex,simInt triangleIndex,simInt* vertexIndices,simFloat* triangleNormals);

