#if !defined(simInternal_INCLUDED_)
#define simInternal_INCLUDED_

#include "simConst.h"
#include "simTypes.h"
#include <string>
#include <vector>

void setCurrentScriptInfo_cSide(int scriptHandle,int scriptNameIndex);
int getCurrentScriptNameIndex_cSide();
std::string getIndexAdjustedObjectName(const char* nm);


simInt simRunSimulator_internal(const simChar* applicationName,simInt options,simVoid(*initCallBack)(),simVoid(*loopCallBack)(),simVoid(*deinitCallBack)(),simInt stopDelay,const simChar* sceneOrModelToLoad,bool launchSimThread);
simVoid* simGetMainWindow_internal(simInt type);
simChar* simGetLastError_internal();
simInt simSetBoolParam_internal(simInt parameter,simBool boolState);
simInt simGetBoolParam_internal(simInt parameter);
simInt simSetInt32Param_internal(simInt parameter,simInt intState);
simInt simGetInt32Param_internal(simInt parameter,simInt* intState);
simInt simGetUInt64Param_internal(simInt parameter,simUInt64* intState);
simInt simSetFloatParam_internal(simInt parameter,simFloat floatState);
simInt simGetFloatParam_internal(simInt parameter,simFloat* floatState);
simInt simSetStringParam_internal(simInt parameter,const simChar* str);
simChar* simGetStringParam_internal(simInt parameter);
simInt simSetArrayParam_internal(simInt parameter,const simVoid* arrayOfValues);
simInt simGetArrayParam_internal(simInt parameter,simVoid* arrayOfValues);
simInt simSetNamedStringParam_internal(const simChar* paramName,const simChar* stringParam,simInt paramLength);
simChar* simGetNamedStringParam_internal(const simChar* paramName,simInt* paramLength);
simInt simGetObject_internal(const simChar* objectAlias,simInt index,simInt proxy,simInt options);
simInt64 simGetObjectUid_internal(simInt objectHandle);
simInt simGetObjectFromUid_internal(simInt64 uid,simInt options);
simInt simGetScriptHandleEx_internal(simInt scriptType,simInt objectHandle,const simChar* scriptName);
simInt simRemoveObjects_internal(const simInt* objectHandles,simInt count);
simInt simRemoveModel_internal(simInt objectHandle);
simChar* simGetObjectAlias_internal(simInt objectHandle,simInt options);
simInt simSetObjectAlias_internal(simInt objectHandle,const simChar* objectAlias,simInt options);
simInt simGetObjectMatrix_internal(simInt objectHandle,simInt relativeToObjectHandle,simFloat* matrix);
simInt simSetObjectMatrix_internal(simInt objectHandle,simInt relativeToObjectHandle,const simFloat* matrix);
simInt simGetObjectPose_internal(simInt objectHandle,simInt relativeToObjectHandle,simFloat* pose);
simInt simSetObjectPose_internal(simInt objectHandle,simInt relativeToObjectHandle,const simFloat* pose);
simInt simGetObjectPosition_internal(simInt objectHandle,simInt relativeToObjectHandle,simFloat* position);
simInt simSetObjectPosition_internal(simInt objectHandle,simInt relativeToObjectHandle,const simFloat* position);
simInt simGetObjectOrientation_internal(simInt objectHandle,simInt relativeToObjectHandle,simFloat* eulerAngles);
simInt simGetObjectQuaternion_internal(simInt objectHandle,simInt relativeToObjectHandle,simFloat* quaternion);
simInt simSetObjectQuaternion_internal(simInt objectHandle,simInt relativeToObjectHandle,const simFloat* quaternion);
simInt simSetObjectOrientation_internal(simInt objectHandle,simInt relativeToObjectHandle,const simFloat* eulerAngles);
simInt simGetJointPosition_internal(simInt objectHandle,simFloat* position);
simInt simSetJointPosition_internal(simInt objectHandle,simFloat position);
simInt simSetJointTargetPosition_internal(simInt objectHandle,simFloat targetPosition);
simInt simGetJointTargetPosition_internal(simInt objectHandle,simFloat* targetPosition);
simInt simGetObjectChildPose_internal(simInt objectHandle,simFloat* pose);
simInt simSetObjectChildPose_internal(simInt objectHandle,const simFloat* pose);
simInt simGetJointInterval_internal(simInt objectHandle,simBool* cyclic,simFloat* interval);
simInt simSetJointInterval_internal(simInt objectHandle,simBool cyclic,const simFloat* interval);
simInt simGetObjectParent_internal(simInt objectHandle);
simInt simGetObjectChild_internal(simInt objectHandle,simInt index);
simInt simSetObjectParent_internal(simInt objectHandle,simInt parentObjectHandle,simBool keepInPlace);
simInt simGetObjectType_internal(simInt objectHandle);
simInt simGetJointType_internal(simInt objectHandle);
simInt simBuildIdentityMatrix_internal(simFloat* matrix);
simInt simBuildMatrix_internal(const simFloat* position,const simFloat* eulerAngles,simFloat* matrix);
simInt simBuildPose_internal(const simFloat* position,const simFloat* eulerAngles,simFloat* pose);
simInt simGetEulerAnglesFromMatrix_internal(const simFloat* matrix,simFloat* eulerAngles);
simInt simInvertMatrix_internal(simFloat* matrix);
simInt simMultiplyMatrices_internal(const simFloat* matrixIn1,const simFloat* matrixIn2,simFloat* matrixOut);
simInt simMultiplyPoses_internal(const simFloat* poseIn1,const simFloat* poseIn2,simFloat* poseOut);
simInt simInvertPose_internal(simFloat* pose);
simInt simInterpolatePoses_internal(const simFloat* poseIn1,const simFloat* poseIn2,simFloat interpolFactor,simFloat* poseOut);
simInt simPoseToMatrix_internal(const simFloat* poseIn,simFloat* matrixOut);
simInt simMatrixToPose_internal(const simFloat* matrixIn,simFloat* poseOut);
simInt simInterpolateMatrices_internal(const simFloat* matrixIn1,const simFloat* matrixIn2,simFloat interpolFactor,simFloat* matrixOut);
simInt simTransformVector_internal(const simFloat* matrix,simFloat* vect);
simInt simReservedCommand_internal(simInt v,simInt w);
simFloat simGetSimulationTime_internal();
simInt simGetSimulationState_internal();
simDouble simGetSystemTime_internal();
simInt simLoadScene_internal(const simChar* filename);
simInt simCloseScene_internal();
simInt simSaveScene_internal(const simChar* filename);
simInt simLoadModel_internal(const simChar* filename);
simInt simSaveModel_internal(int baseOfModelHandle,const simChar* filename);
simChar* simGetSimulatorMessage_internal(simInt* messageID,simInt* auxiliaryData,simInt* returnedDataSize);
simInt simDoesFileExist_internal(const simChar* filename);
simInt* simGetObjectSel_internal(simInt* cnt);
simInt simSetObjectSel_internal(const simInt* handles,simInt cnt);
simInt simHandleProximitySensor_internal(simInt sensorHandle,simFloat* detectedPoint,simInt* detectedObjectHandle,simFloat* normalVector);
simInt simReadProximitySensor_internal(simInt sensorHandle,simFloat* detectedPoint,simInt* detectedObjectHandle,simFloat* normalVector);
simInt simHandleDynamics_internal(simFloat deltaTime);
simInt simAssociateScriptWithObject_internal(simInt scriptHandle,simInt associatedObjectHandle);
simInt simHandleMainScript_internal();
simInt simResetScript_internal(simInt scriptHandle);
simInt simAddScript_internal(simInt scriptProperty);
simInt simRemoveScript_internal(simInt scriptHandle);
simInt simRefreshDialogs_internal(simInt refreshDegree);
simInt simResetProximitySensor_internal(simInt sensorHandle);
simInt simCheckProximitySensor_internal(simInt sensorHandle,simInt entityHandle,simFloat* detectedPoint);
simInt simCheckProximitySensorEx_internal(simInt sensorHandle,simInt entityHandle,simInt detectionMode,simFloat detectionThreshold,simFloat maxAngle,simFloat* detectedPoint,simInt* detectedObjectHandle,simFloat* normalVector);
simInt simCheckProximitySensorEx2_internal(simInt sensorHandle,simFloat* vertexPointer,simInt itemType,simInt itemCount,simInt detectionMode,simFloat detectionThreshold,simFloat maxAngle,simFloat* detectedPoint,simFloat* normalVector);
simChar* simCreateBuffer_internal(simInt size);
simInt simReleaseBuffer_internal(const simChar* buffer);
simInt simCheckCollision_internal(simInt entity1Handle,simInt entity2Handle);
simInt simCheckCollisionEx_internal(simInt entity1Handle,simInt entity2Handle,simFloat** intersectionSegments);
simInt simCheckDistance_internal(simInt entity1Handle,simInt entity2Handle,simFloat threshold,simFloat* distanceData);
simInt simSetSimulationTimeStep_internal(simFloat timeStep);
simFloat simGetSimulationTimeStep_internal();
simInt simGetRealTimeSimulation_internal();
simInt simIsRealTimeSimulationStepNeeded_internal();
simInt simAdjustRealTimeTimer_internal(simInt instanceIndex,simFloat deltaTime);
simInt simGetSimulationPassesPerRenderingPass_internal();
simInt simAdvanceSimulationByOneStep_internal();
simInt simStartSimulation_internal();
simInt simStopSimulation_internal();
simInt simPauseSimulation_internal();
simInt simLoadModule_internal(const simChar* filenameAndPath,const simChar* pluginName);
simInt simUnloadModule_internal(simInt pluginhandle);
simChar* simGetModuleName_internal(simInt index,simUChar* moduleVersion);
simInt simFloatingViewAdd_internal(simFloat posX,simFloat posY,simFloat sizeX,simFloat sizeY,simInt options);
simInt simFloatingViewRemove_internal(simInt floatingViewHandle);
simInt simAdjustView_internal(simInt viewHandleOrIndex,simInt associatedViewableObjectHandle,simInt options,const simChar* viewLabel);
simInt simSetLastError_internal(const simChar* funcName,const simChar* errorMessage);
simInt simHandleGraph_internal(simInt graphHandle,simFloat simulationTime);
simInt simResetGraph_internal(simInt graphHandle);
simInt simAddGraphStream_internal(simInt graphHandle,const simChar* streamName,const simChar* unitStr,simInt options,const simFloat* color,simFloat cyclicRange);
simInt simDestroyGraphCurve_internal(simInt graphHandle,simInt curveId);
simInt simSetGraphStreamTransformation_internal(simInt graphHandle,simInt streamId,simInt trType,simFloat mult,simFloat off,simInt movingAvgPeriod);
simInt simDuplicateGraphCurveToStatic_internal(simInt graphHandle,simInt curveId,const simChar* curveName);
simInt simAddGraphCurve_internal(simInt graphHandle,const simChar* curveName,simInt dim,const simInt* streamIds,const simFloat* defaultValues,const simChar* unitStr,simInt options,const simFloat* color,simInt curveWidth);
simInt simSetGraphStreamValue_internal(simInt graphHandle,simInt streamId,simFloat value);
simInt simSetNavigationMode_internal(simInt navigationMode);
simInt simGetNavigationMode_internal();
simInt simSetPage_internal(simInt index);
simInt simGetPage_internal();
simInt simRegisterScriptCallbackFunction_internal(const simChar* funcNameAtPluginName,const simChar* callTips,simVoid(*callBack)(struct SScriptCallBack* cb));
simInt simRegisterScriptVariable_internal(const simChar* varNameAtPluginName,const simChar* varValue,simInt stackHandle);
simInt simRegisterScriptFuncHook_internal(simInt scriptHandle,const simChar* funcToHook,const simChar* userFunction,simBool executeBefore,simInt options);
simInt simSetJointTargetVelocity_internal(simInt objectHandle,simFloat targetVelocity);
simInt simGetJointTargetVelocity_internal(simInt objectHandle,simFloat* targetVelocity);
simInt simCopyPasteObjects_internal(simInt* objectHandles,simInt objectCount,simInt options);
simInt simScaleObjects_internal(const simInt* objectHandles,simInt objectCount,simFloat scalingFactor,simBool scalePositionsToo);
simInt simAddDrawingObject_internal(simInt objectType,simFloat size,simFloat duplicateTolerance,simInt parentObjectHandle,simInt maxItemCount,const simFloat* color,const simFloat* setToNULL,const simFloat* setToNULL2,const simFloat* setToNULL3);
simInt simRemoveDrawingObject_internal(simInt objectHandle);
simInt simAddDrawingObjectItem_internal(simInt objectHandle,const simFloat* itemData);
simFloat simGetObjectSizeFactor_internal(simInt objectHandle);
simInt simAnnounceSceneContentChange_internal();
simInt simSetInt32Signal_internal(const simChar* signalName,simInt signalValue);
simInt simGetInt32Signal_internal(const simChar* signalName,simInt* signalValue);
simInt simClearInt32Signal_internal(const simChar* signalName);
simInt simSetFloatSignal_internal(const simChar* signalName,simFloat signalValue);
simInt simGetFloatSignal_internal(const simChar* signalName,simFloat* signalValue);
simInt simClearFloatSignal_internal(const simChar* signalName);
simInt simSetStringSignal_internal(const simChar* signalName,const simChar* signalValue,simInt stringLength);
simChar* simGetStringSignal_internal(const simChar* signalName,simInt* stringLength);
simInt simClearStringSignal_internal(const simChar* signalName);
simChar* simGetSignalName_internal(simInt signalIndex,simInt signalType);
simInt simSetObjectProperty_internal(simInt objectHandle,simInt prop);
simInt simGetObjectProperty_internal(simInt objectHandle);
simInt simSetObjectSpecialProperty_internal(simInt objectHandle,simInt prop);
simInt simGetObjectSpecialProperty_internal(simInt objectHandle);
simInt simReadForceSensor_internal(simInt objectHandle,simFloat* forceVector,simFloat* torqueVector);
simInt simSetLightParameters_internal(simInt objectHandle,simInt state,const simFloat* setToNULL,const simFloat* diffusePart,const simFloat* specularPart);
simInt simGetLightParameters_internal(simInt objectHandle,simFloat* setToNULL,simFloat* diffusePart,simFloat* specularPart);
simInt simGetVelocity_internal(simInt shapeHandle,simFloat* linearVelocity,simFloat* angularVelocity);
simInt simGetObjectVelocity_internal(simInt objectHandle,simFloat* linearVelocity,simFloat* angularVelocity);
simInt simGetJointVelocity_internal(simInt jointHandle,simFloat* velocity);
simInt simAddForceAndTorque_internal(simInt shapeHandle,const simFloat* force,const simFloat* torque);
simInt simAddForce_internal(simInt shapeHandle,const simFloat* position,const simFloat* force);
simInt simSetExplicitHandling_internal(simInt objectHandle,int explicitFlags);
simInt simGetExplicitHandling_internal(simInt objectHandle);
simInt simGetLinkDummy_internal(simInt dummyHandle);
simInt simSetLinkDummy_internal(simInt dummyHandle,simInt linkedDummyHandle);
simInt simSetModelProperty_internal(simInt objectHandle,simInt modelProperty);
simInt simGetModelProperty_internal(simInt objectHandle);
simInt simSetObjectColor_internal(simInt objectHandle,simInt index,simInt colorComponent,const simFloat* rgbData);
simInt simGetObjectColor_internal(simInt objectHandle,simInt index,simInt colorComponent,simFloat* rgbData);
simInt simSetShapeColor_internal(simInt shapeHandle,const simChar* colorName,simInt colorComponent,const simFloat* rgbData);
simInt simGetShapeColor_internal(simInt shapeHandle,const simChar* colorName,simInt colorComponent,simFloat* rgbData);
simInt simResetDynamicObject_internal(simInt objectHandle);
simInt simSetJointMode_internal(simInt jointHandle,simInt jointMode,simInt options);
simInt simGetJointMode_internal(simInt jointHandle,simInt* options);
simInt simSerialOpen_internal(const simChar* portString,simInt baudRate,simVoid* reserved1,simVoid* reserved2);
simInt simSerialClose_internal(simInt portHandle);
simInt simSerialSend_internal(simInt portHandle,const simChar* data,simInt dataLength);
simInt simSerialRead_internal(simInt portHandle,simChar* buffer,simInt dataLengthToRead);
simInt simSerialCheck_internal(simInt portHandle);
simInt simGetContactInfo_internal(simInt dynamicPass,simInt objectHandle,simInt index,simInt* objectHandles,simFloat* contactInfo);
simInt simAuxiliaryConsoleOpen_internal(const simChar* title,simInt maxLines,simInt mode,const simInt* position,const simInt* size,const simFloat* textColor,const simFloat* backgroundColor);
simInt simAuxiliaryConsoleClose_internal(simInt consoleHandle);
simInt simAuxiliaryConsoleShow_internal(simInt consoleHandle,simBool showState);
simInt simAuxiliaryConsolePrint_internal(simInt consoleHandle,const simChar* text);
simInt simImportShape_internal(simInt fileformat,const simChar* pathAndFilename,simInt options,simFloat identicalVerticeTolerance,simFloat scalingFactor);
simInt simImportMesh_internal(simInt fileformat,const simChar* pathAndFilename,simInt options,simFloat identicalVerticeTolerance,simFloat scalingFactor,simFloat*** vertices,simInt** verticesSizes,simInt*** indices,simInt** indicesSizes,simFloat*** reserved,simChar*** names);
simInt simExportMesh_internal(simInt fileformat,const simChar* pathAndFilename,simInt options,simFloat scalingFactor,simInt elementCount,const simFloat** vertices,const simInt* verticesSizes,const simInt** indices,const simInt* indicesSizes,simFloat** reserved,const simChar** names);
simInt simCreateMeshShape_internal(simInt options,simFloat shadingAngle,const simFloat* vertices,simInt verticesSize,const simInt* indices,simInt indicesSize,simFloat* reserved);
simInt simCreatePrimitiveShape_internal(simInt primitiveType,const simFloat* sizes,simInt options);
simInt simCreateHeightfieldShape_internal(simInt options,simFloat shadingAngle,simInt xPointCount,simInt yPointCount,simFloat xSize,const simFloat* heights);
simInt simGetShapeMesh_internal(simInt shapeHandle,simFloat** vertices,simInt* verticesSize,simInt** indices,simInt* indicesSize,simFloat** normals);
simInt simCreateJoint_internal(simInt jointType,simInt jointMode,simInt options,const simFloat* sizes,const simFloat* reservedA,const simFloat* reservedB);
simInt simGetObjectInt32Param_internal(simInt objectHandle,simInt parameterID,simInt* parameter);
simInt simSetObjectInt32Param_internal(simInt objectHandle,simInt parameterID,simInt parameter);
simInt simGetObjectFloatParam_internal(simInt objectHandle,simInt parameterID,simFloat* parameter);
simInt simSetObjectFloatParam_internal(simInt objectHandle,simInt parameterID,simFloat parameter);
simFloat* simGetObjectFloatArrayParam_internal(simInt objectHandle,simInt parameterID,simInt* size);
simInt simSetObjectFloatArrayParam_internal(simInt objectHandle,simInt parameterID,const simFloat* params,simInt size);
simChar* simGetObjectStringParam_internal(simInt objectHandle,simInt parameterID,simInt* parameterLength);
simInt simSetObjectStringParam_internal(simInt objectHandle,simInt parameterID,const simChar* parameter,simInt parameterLength);
simInt simGetScriptInt32Param_internal(simInt scriptHandle,simInt parameterID,simInt* parameter);
simInt simSetScriptInt32Param_internal(simInt scriptHandle,simInt parameterID,simInt parameter);
simChar* simGetScriptStringParam_internal(simInt scriptHandle,simInt parameterID,simInt* parameterLength);
simInt simSetScriptStringParam_internal(simInt scriptHandle,simInt parameterID,const simChar* parameter,simInt parameterLength);
simInt simSetSimulationPassesPerRenderingPass_internal(simInt p);
simInt simGetRotationAxis_internal(const simFloat* matrixStart,const simFloat* matrixGoal,simFloat* axis,simFloat* angle);
simInt simRotateAroundAxis_internal(const simFloat* matrixIn,const simFloat* axis,const simFloat* axisPos,simFloat angle,simFloat* matrixOut);
simInt simGetJointForce_internal(simInt jointHandle,simFloat* forceOrTorque);
simInt simGetJointTargetForce_internal(simInt jointHandle,simFloat* forceOrTorque);
simInt simSetJointTargetForce_internal(simInt objectHandle,simFloat forceOrTorque,simBool signedValue);
simInt simCameraFitToView_internal(simInt viewHandleOrIndex,simInt objectCount,const simInt* objectHandles,simInt options,simFloat scaling);
simInt simPersistentDataWrite_internal(const simChar* dataTag,const simChar* dataValue,simInt dataLength,simInt options);
simChar* simPersistentDataRead_internal(const simChar* dataTag,simInt* dataLength);
simInt simIsHandle_internal(simInt generalObjectHandle,simInt generalObjectType);
simInt simHandleVisionSensor_internal(simInt visionSensorHandle,simFloat** auxValues,simInt** auxValuesCount);
simInt simReadVisionSensor_internal(simInt visionSensorHandle,simFloat** auxValues,simInt** auxValuesCount);
simInt simResetVisionSensor_internal(simInt visionSensorHandle);
simInt simCheckVisionSensor_internal(simInt visionSensorHandle,simInt entityHandle,simFloat** auxValues,simInt** auxValuesCount);
simFloat* simCheckVisionSensorEx_internal(simInt visionSensorHandle,simInt entityHandle,simBool returnImage);
simUChar* simGetVisionSensorImg_internal(simInt sensorHandle,simInt options,simFloat rgbaCutOff,const simInt* pos,const simInt* size,simInt* resolution);
simInt simSetVisionSensorImg_internal(simInt sensorHandle,const simUChar* img,simInt options,const simInt* pos,const simInt* size);
simFloat* simGetVisionSensorDepth_internal(simInt sensorHandle,simInt options,const simInt* pos,const simInt* size,simInt* resolution);
simInt simRuckigPos_internal(simInt dofs,simDouble baseCycleTime,simInt flags,const simDouble* currentPos,const simDouble* currentVel,const simDouble* currentAccel,const simDouble* maxVel,const simDouble* maxAccel,const simDouble* maxJerk,const simBool* selection,const simDouble* targetPos,const simDouble* targetVel,simDouble* reserved1,simInt* reserved2);
simInt simRuckigVel_internal(simInt dofs,simDouble baseCycleTime,simInt flags,const simDouble* currentPos,const simDouble* currentVel,const simDouble* currentAccel,const simDouble* maxAccel,const simDouble* maxJerk,const simBool* selection,const simDouble* targetVel,simDouble* reserved1,simInt* reserved2);
simInt simRuckigStep_internal(simInt objHandle,simDouble cycleTime,simDouble* newPos,simDouble* newVel,simDouble* newAccel,simDouble* syncTime,simDouble* reserved1,simInt* reserved2);
simInt simRuckigRemove_internal(simInt objHandle);
simInt simCreateDummy_internal(simFloat size,const simFloat* reserved);
simInt simGroupShapes_internal(const simInt* shapeHandles,simInt shapeCount);
simInt* simUngroupShape_internal(simInt shapeHandle,simInt* shapeCount);
simInt simCreateProximitySensor_internal(simInt sensorType,simInt subType,simInt options,const simInt* intParams,const simFloat* floatParams,const simFloat* reserved);
simInt simCreateForceSensor_internal(simInt options,const simInt* intParams,const simFloat* floatParams,const simFloat* reserved);
simInt simCreateVisionSensor_internal(simInt options,const simInt* intParams,const simFloat* floatParams,const simFloat* reserved);
simInt simConvexDecompose_internal(simInt shapeHandle,simInt options,const simInt* intParams,const simFloat* floatParams);
simVoid simQuitSimulator_internal(simBool ignoredArgument);
simInt simSetShapeMaterial_internal(simInt shapeHandle,simInt materialIdOrShapeHandle);
simInt simGetTextureId_internal(const simChar* textureName,simInt* resolution);
simChar* simReadTexture_internal(simInt textureId,simInt options,simInt posX,simInt posY,simInt sizeX,simInt sizeY);
simInt simWriteTexture_internal(simInt textureId,simInt options,const simChar* data,simInt posX,simInt posY,simInt sizeX,simInt sizeY,simFloat interpol);
simInt simCreateTexture_internal(const simChar* fileName,simInt options,const simFloat* planeSizes,const simFloat* scalingUV,const simFloat* xy_g,simInt fixedResolution,simInt* textureId,simInt* resolution,const simVoid* reserved);
simInt simWriteCustomDataBlock_internal(simInt objectHandle,const simChar* tagName,const simChar* data,simInt dataSize);
simChar* simReadCustomDataBlock_internal(simInt objectHandle,const simChar* tagName,simInt* dataSize);
simChar* simReadCustomDataBlockTags_internal(simInt objectHandle,simInt* tagCount);
simInt simGetShapeGeomInfo_internal(simInt shapeHandle,simInt* intData,simFloat* floatData,simVoid* reserved);
simInt simGetObjects_internal(simInt index,simInt objectType);
simInt* simGetObjectsInTree_internal(simInt treeBaseHandle,simInt objectType,simInt options,simInt* objectCount);
simInt simSetObjectSizeValues_internal(simInt objectHandle,const simFloat* sizeValues);
simInt simGetObjectSizeValues_internal(simInt objectHandle,simFloat* sizeValues);
simInt simScaleObject_internal(simInt objectHandle,simFloat xScale,simFloat yScale,simFloat zScale,simInt options);
simInt simSetShapeTexture_internal(simInt shapeHandle,simInt textureId,simInt mappingMode,simInt options,const simFloat* uvScaling,const simFloat* position,const simFloat* orientation);
simInt simGetShapeTextureId_internal(simInt shapeHandle);
simInt simCreateCollectionEx_internal(simInt options);
simInt simAddItemToCollection_internal(simInt collectionHandle,simInt what,simInt objectHandle,simInt options);
simInt simDestroyCollection_internal(simInt collectionHandle);
simInt* simGetCollectionObjects_internal(simInt collectionHandle,simInt* objectCount);
simInt simReorientShapeBoundingBox_internal(simInt shapeHandle,simInt relativeToHandle,simInt reservedSetToZero);
simInt simSaveImage_internal(const simUChar* image,const simInt* resolution,simInt options,const simChar* filename,simInt quality,simVoid* reserved);
simUChar* simLoadImage_internal(simInt* resolution,simInt options,const simChar* filename,simVoid* reserved);
simUChar* simGetScaledImage_internal(const simUChar* imageIn,const simInt* resolutionIn,simInt* resolutionOut,simInt options,simVoid* reserved);
simInt simTransformImage_internal(simUChar* image,const simInt* resolution,simInt options,const simFloat* floatParams,const simInt* intParams,simVoid* reserved);
simInt simGetQHull_internal(const simFloat* inVertices,simInt inVerticesL,simFloat** verticesOut,simInt* verticesOutL,simInt** indicesOut,simInt* indicesOutL,simInt reserved1,const simFloat* reserved2);
simInt simGetDecimatedMesh_internal(const simFloat* inVertices,simInt inVerticesL,const simInt* inIndices,simInt inIndicesL,simFloat** verticesOut,simInt* verticesOutL,simInt** indicesOut,simInt* indicesOutL,simFloat decimationPercent,simInt reserved1,const simFloat* reserved2);
simInt simCallScriptFunctionEx_internal(simInt scriptHandleOrType,const simChar* functionNameAtScriptName,simInt stackId);
simChar* simGetExtensionString_internal(simInt objectHandle,simInt index,const char* key);
simInt simComputeMassAndInertia_internal(simInt shapeHandle,simFloat density);
simInt simCreateStack_internal();
simInt simReleaseStack_internal(simInt stackHandle);
simInt simCopyStack_internal(simInt stackHandle);
simInt simPushNullOntoStack_internal(simInt stackHandle);
simInt simPushBoolOntoStack_internal(simInt stackHandle,simBool value);
simInt simPushInt32OntoStack_internal(simInt stackHandle,simInt value);
simInt simPushInt64OntoStack_internal(simInt stackHandle,simInt64 value);
simInt simPushFloatOntoStack_internal(simInt stackHandle,simFloat value);
simInt simPushDoubleOntoStack_internal(simInt stackHandle,simDouble value);
simInt simPushStringOntoStack_internal(simInt stackHandle,const simChar* value,simInt stringSize);
simInt simPushUInt8TableOntoStack_internal(simInt stackHandle,const simUChar* values,simInt valueCnt);
simInt simPushInt32TableOntoStack_internal(simInt stackHandle,const simInt* values,simInt valueCnt);
simInt simPushInt64TableOntoStack_internal(simInt stackHandle,const simInt64* values,simInt valueCnt);
simInt simPushFloatTableOntoStack_internal(simInt stackHandle,const simFloat* values,simInt valueCnt);
simInt simPushDoubleTableOntoStack_internal(simInt stackHandle,const simDouble* values,simInt valueCnt);
simInt simPushTableOntoStack_internal(simInt stackHandle);
simInt simInsertDataIntoStackTable_internal(simInt stackHandle);
simInt simGetStackSize_internal(simInt stackHandle);
simInt simPopStackItem_internal(simInt stackHandle,simInt count);
simInt simMoveStackItemToTop_internal(simInt stackHandle,simInt cIndex);
simInt simIsStackValueNull_internal(simInt stackHandle);
simInt simGetStackBoolValue_internal(simInt stackHandle,simBool* boolValue);
simInt simGetStackInt32Value_internal(simInt stackHandle,simInt* numberValue);
simInt simGetStackInt64Value_internal(simInt stackHandle,simInt64* numberValue);
simInt simGetStackFloatValue_internal(simInt stackHandle,simFloat* numberValue);
simInt simGetStackDoubleValue_internal(simInt stackHandle,simDouble* numberValue);
simChar* simGetStackStringValue_internal(simInt stackHandle,simInt* stringSize);
simInt simGetStackTableInfo_internal(simInt stackHandle,simInt infoType);
simInt simGetStackUInt8Table_internal(simInt stackHandle,simUChar* array,simInt count);
simInt simGetStackInt32Table_internal(simInt stackHandle,simInt* array,simInt count);
simInt simGetStackInt64Table_internal(simInt stackHandle,simInt64* array,simInt count);
simInt simGetStackFloatTable_internal(simInt stackHandle,simFloat* array,simInt count);
simInt simGetStackDoubleTable_internal(simInt stackHandle,simDouble* array,simInt count);
simInt simUnfoldStackTable_internal(simInt stackHandle);
simInt simDebugStack_internal(simInt stackHandle,simInt cIndex);
simFloat simGetEngineFloatParam_internal(simInt paramId,simInt objectHandle,const simVoid* object,simBool* ok);
simInt simGetEngineInt32Param_internal(simInt paramId,simInt objectHandle,const simVoid* object,simBool* ok);
simBool simGetEngineBoolParam_internal(simInt paramId,simInt objectHandle,const simVoid* object,simBool* ok);
simInt simSetEngineFloatParam_internal(simInt paramId,simInt objectHandle,const simVoid* object,simFloat val);
simInt simSetEngineInt32Param_internal(simInt paramId,simInt objectHandle,const simVoid* object,simInt val);
simInt simSetEngineBoolParam_internal(simInt paramId,simInt objectHandle,const simVoid* object,simBool val);
simInt simCreateOctree_internal(simFloat voxelSize,simInt options,simFloat pointSize,simVoid* reserved);
simInt simCreatePointCloud_internal(simFloat maxVoxelSize,simInt maxPtCntPerVoxel,simInt options,simFloat pointSize,simVoid* reserved);
simInt simSetPointCloudOptions_internal(simInt pointCloudHandle,simFloat maxVoxelSize,simInt maxPtCntPerVoxel,simInt options,simFloat pointSize,simVoid* reserved);
simInt simGetPointCloudOptions_internal(simInt pointCloudHandle,simFloat* maxVoxelSize,simInt* maxPtCntPerVoxel,simInt* options,simFloat* pointSize,simVoid* reserved);
simInt simInsertVoxelsIntoOctree_internal(simInt octreeHandle,simInt options,const simFloat* pts,simInt ptCnt,const simUChar* color,const simUInt* tag,simVoid* reserved);
simInt simRemoveVoxelsFromOctree_internal(simInt octreeHandle,simInt options,const simFloat* pts,simInt ptCnt,simVoid* reserved);
simInt simInsertPointsIntoPointCloud_internal(simInt pointCloudHandle,simInt options,const simFloat* pts,simInt ptCnt,const simUChar* color,simVoid* optionalValues);
simInt simRemovePointsFromPointCloud_internal(simInt pointCloudHandle,simInt options,const simFloat* pts,simInt ptCnt,simFloat tolerance,simVoid* reserved);
simInt simIntersectPointsWithPointCloud_internal(simInt pointCloudHandle,simInt options,const simFloat* pts,simInt ptCnt,simFloat tolerance,simVoid* reserved);
const float* simGetOctreeVoxels_internal(simInt octreeHandle,simInt* ptCnt,simVoid* reserved);
const float* simGetPointCloudPoints_internal(simInt pointCloudHandle,simInt* ptCnt,simVoid* reserved);
simInt simInsertObjectIntoOctree_internal(simInt octreeHandle,simInt objectHandle,simInt options,const simUChar* color,simUInt tag,simVoid* reserved);
simInt simSubtractObjectFromOctree_internal(simInt octreeHandle,simInt objectHandle,simInt options,simVoid* reserved);
simInt simInsertObjectIntoPointCloud_internal(simInt pointCloudHandle,simInt objectHandle,simInt options,simFloat gridSize,const simUChar* color,simVoid* optionalValues);
simInt simSubtractObjectFromPointCloud_internal(simInt pointCloudHandle,simInt objectHandle,simInt options,simFloat tolerance,simVoid* reserved);
simInt simCheckOctreePointOccupancy_internal(simInt octreeHandle,simInt options,const simFloat* points,simInt ptCnt,simUInt* tag,simUInt64* location,simVoid* reserved);
simChar* simOpenTextEditor_internal(const simChar* initText,const simChar* xml,simInt* various);
simChar* simPackTable_internal(simInt stackHandle,simInt* bufferSize);
simInt simUnpackTable_internal(simInt stackHandle,const simChar* buffer,simInt bufferSize);
simInt simSetReferencedHandles_internal(simInt objectHandle,simInt count,const simInt* referencedHandles,const simInt* reserved1,const simInt* reserved2);
simInt simGetReferencedHandles_internal(simInt objectHandle,simInt** referencedHandles,simInt** reserved1,simInt** reserved2);
simInt simGetShapeViz_internal(simInt shapeHandle,simInt index,struct SShapeVizInfo* info);
simInt simExecuteScriptString_internal(simInt scriptHandleOrType,const simChar* stringAtScriptName,simInt stackHandle);
simChar* simGetApiFunc_internal(simInt scriptHandleOrType,const simChar* apiWord);
simChar* simGetApiInfo_internal(simInt scriptHandleOrType,const simChar* apiWord);
simInt simSetModuleInfo_internal(const simChar* moduleName,simInt infoType,const simChar* stringInfo,simInt intInfo);
simInt simGetModuleInfo_internal(const simChar* moduleName,simInt infoType,simChar** stringInfo,simInt* intInfo);
simInt simIsDeprecated_internal(const simChar* funcOrConst);
simChar* simGetPersistentDataTags_internal(simInt* tagCount);
simInt simEventNotification_internal(const simChar* event);
simInt simApplyTexture_internal(simInt shapeHandle,const simFloat* textureCoordinates,simInt textCoordSize,const simUChar* texture,const simInt* textureResolution,simInt options);
simInt simSetJointDependency_internal(simInt jointHandle,simInt masterJointHandle,simFloat offset,simFloat multCoeff);
simInt simGetJointDependency_internal(simInt jointHandle,simInt* masterJointHandle,simFloat* offset,simFloat* multCoeff);
simInt simAddLog_internal(const simChar* pluginName,simInt verbosityLevel,const simChar* logMsg);
simInt simGetShapeMass_internal(simInt shapeHandle,simFloat* mass);
simInt simSetShapeMass_internal(simInt shapeHandle,simFloat mass);
simInt simGetShapeInertia_internal(simInt shapeHandle,simFloat* inertiaMatrix,simFloat* transformationMatrix);
simInt simSetShapeInertia_internal(simInt shapeHandle,const simFloat* inertiaMatrix,const simFloat* transformationMatrix);
simInt simIsDynamicallyEnabled_internal(simInt objectHandle);
simInt simGenerateShapeFromPath_internal(const simFloat* path,simInt pathSize,const simFloat* section,simInt sectionSize,simInt options,const simFloat* upVector,simFloat reserved);
simFloat simGetClosestPosOnPath_internal(const simFloat* path,simInt pathSize,const simFloat* pathLengths,const simFloat* absPt);
simInt simInitScript_internal(simInt scriptHandle);
simInt simModuleEntry_internal(simInt handle,const simChar* label,simInt state);
simInt simCheckExecAuthorization_internal(const simChar* what,const simChar* args,simInt scriptHandle);


simVoid _simSetDynamicSimulationIconCode_internal(simVoid* object,simInt code);
simVoid _simSetDynamicObjectFlagForVisualization_internal(simVoid* object,simInt flag);
simInt _simGetObjectListSize_internal(simInt objType);
const simVoid* _simGetObjectFromIndex_internal(simInt objType,simInt index);
simInt _simGetObjectID_internal(const simVoid* object);
simInt _simGetObjectType_internal(const simVoid* object);
const simVoid** _simGetObjectChildren_internal(const simVoid* object,simInt* count);
const simVoid* _simGetGeomProxyFromShape_internal(const simVoid* shape);
const simVoid* _simGetParentObject_internal(const simVoid* object);
const simVoid* _simGetObject_internal(int objID);
simVoid _simGetObjectLocalTransformation_internal(const simVoid* object,simFloat* pos,simFloat* quat,simBool excludeFirstJointTransformation);
simVoid _simSetObjectLocalTransformation_internal(simVoid* object,const simFloat* pos,const simFloat* quat,simFloat simTime);
simVoid _simDynReportObjectCumulativeTransformation_internal(simVoid* object,const simFloat* pos,const simFloat* quat,simFloat simTime);
simVoid _simSetObjectCumulativeTransformation_internal(simVoid* object,const simFloat* pos,const simFloat* quat,simBool keepChildrenInPlace);
simVoid _simGetObjectCumulativeTransformation_internal(const simVoid* object,simFloat* pos,simFloat* quat,simBool excludeFirstJointTransformation);
simBool _simIsShapeDynamicallyStatic_internal(const simVoid* shape);
simInt _simGetTreeDynamicProperty_internal(const simVoid* object);
simInt _simGetDummyLinkType_internal(const simVoid* dummy,simInt* linkedDummyID);
simInt _simGetJointMode_internal(const simVoid* joint);
simBool _simIsJointInHybridOperation_internal(const simVoid* joint);
simVoid _simDisableDynamicTreeForManipulation_internal(const simVoid* object,simBool disableFlag);
simBool _simIsShapeDynamicallyRespondable_internal(const simVoid* shape);
simInt _simGetDynamicCollisionMask_internal(const simVoid* shape);
const simVoid* _simGetLastParentForLocalGlobalCollidable_internal(const simVoid* shape);
simVoid _simSetJointVelocity_internal(const simVoid* joint,simFloat vel);
simVoid _simSetJointPosition_internal(const simVoid* joint,simFloat pos);
simFloat _simGetJointPosition_internal(const simVoid* joint);
simVoid _simSetDynamicMotorPositionControlTargetPosition_internal(const simVoid* joint,simFloat pos);
simVoid _simGetInitialDynamicVelocity_internal(const simVoid* shape,simFloat* vel);
simVoid _simSetInitialDynamicVelocity_internal(simVoid* shape,const simFloat* vel);
simVoid _simGetInitialDynamicAngVelocity_internal(const simVoid* shape,simFloat* angularVel);
simVoid _simSetInitialDynamicAngVelocity_internal(simVoid* shape,const simFloat* angularVel);
simBool _simGetStartSleeping_internal(const simVoid* shape);
simBool _simGetWasPutToSleepOnce_internal(const simVoid* shape);
simBool _simGetDynamicsFullRefreshFlag_internal(const simVoid* object);
simVoid _simSetDynamicsFullRefreshFlag_internal(const simVoid* object,simBool flag);
simVoid _simSetShapeDynamicVelocity_internal(simVoid* shape,const simFloat* linear,const simFloat* angular,simFloat simTime);
simVoid _simGetAdditionalForceAndTorque_internal(const simVoid* shape,simFloat* force,simFloat* torque);
simVoid _simClearAdditionalForceAndTorque_internal(const simVoid* shape);
simBool _simGetJointPositionInterval_internal(const simVoid* joint,simFloat* minValue,simFloat* rangeValue);
simInt _simGetJointType_internal(const simVoid* joint);
simFloat _simGetDynamicMotorTargetPosition_internal(const simVoid* joint);
simFloat _simGetDynamicMotorTargetVelocity_internal(const simVoid* joint);
simFloat _simGetDynamicMotorMaxForce_internal(const simVoid* joint);
simFloat _simGetDynamicMotorUpperLimitVelocity_internal(const simVoid* joint);
simVoid _simSetDynamicMotorReflectedPositionFromDynamicEngine_internal(simVoid* joint,simFloat pos,simFloat simTime);
simVoid _simSetJointSphericalTransformation_internal(simVoid* joint,const simFloat* quat,simFloat simTime);
simVoid _simAddForceSensorCumulativeForcesAndTorques_internal(simVoid* forceSensor,const simFloat* force,const simFloat* torque,int totalPassesCount,simFloat simTime);
simVoid _simAddJointCumulativeForcesOrTorques_internal(simVoid* joint,simFloat forceOrTorque,int totalPassesCount,simFloat simTime);
const simVoid* _simGetGeomWrapFromGeomProxy_internal(const simVoid* geomData);
simFloat _simGetMass_internal(const simVoid* geomInfo);
simFloat _simGetLocalInertiaInfo_internal(const simVoid* object,simFloat* pos,simFloat* quat,simFloat* diagI);
simInt _simGetPurePrimitiveType_internal(const simVoid* geomInfo);
simBool _simIsGeomWrapGeometric_internal(const simVoid* geomInfo);
simBool _simIsGeomWrapConvex_internal(const simVoid* geomInfo);
simInt _simGetGeometricCount_internal(const simVoid* geomInfo);
simVoid _simGetAllGeometrics_internal(const simVoid* geomInfo,simVoid** allGeometrics);
simVoid _simGetPurePrimitiveSizes_internal(const simVoid* geometric,simFloat* sizes);
simVoid _simMakeDynamicAnnouncement_internal(int announceType);
simVoid _simGetVerticesLocalFrame_internal(const simVoid* geometric,simFloat* pos,simFloat* quat);
const simFloat* _simGetHeightfieldData_internal(const simVoid* geometric,simInt* xCount,simInt* yCount,simFloat* minHeight,simFloat* maxHeight);
simVoid _simGetCumulativeMeshes_internal(const simVoid* geomInfo,simFloat** vertices,simInt* verticesSize,simInt** indices,simInt* indicesSize);
simVoid _simGetGravity_internal(simFloat* gravity);
simInt _simGetTimeDiffInMs_internal(simInt previousTime);
simBool _simDoEntitiesCollide_internal(simInt entity1ID,simInt entity2ID,simInt* cacheBuffer,simBool overrideCollidableFlagIfShape1,simBool overrideCollidableFlagIfShape2,simBool pathOrMotionPlanningRoutineCalling);
simBool _simGetDistanceBetweenEntitiesIfSmaller_internal(simInt entity1ID,simInt entity2ID,simFloat* distance,simFloat* ray,simInt* cacheBuffer,simBool overrideMeasurableFlagIfNonCollection1,simBool overrideMeasurableFlagIfNonCollection2,simBool pathPlanningRoutineCalling);
simInt _simHandleJointControl_internal(const simVoid* joint,simInt auxV,const simInt* inputValuesInt,const simFloat* inputValuesFloat,simFloat* outputValues);
simInt _simGetJointDynCtrlMode_internal(const simVoid* joint);
simInt _simHandleCustomContact_internal(simInt objHandle1,simInt objHandle2,simInt engine,simInt* dataInt,simFloat* dataFloat);
const simVoid* _simGetIkGroupObject_internal(int ikGroupID);
simInt _simMpHandleIkGroupObject_internal(const simVoid* ikGroup);
simFloat _simGetPureHollowScaling_internal(const simVoid* geometric);
simVoid _simDynCallback_internal(const simInt* intData,const simFloat* floatData);


// Following courtesy of Stephen James:
simInt simExtLaunchUIThread_internal(const simChar* applicationName,simInt options,const simChar* sceneOrModelToLoad_,const simChar* applicationDir_);
simInt simExtCanInitSimThread_internal();
simInt simExtSimThreadInit_internal();
simInt simExtSimThreadDestroy_internal();
simInt simExtPostExitRequest_internal();
simInt simExtGetExitRequest_internal();
simInt simExtStep_internal(simBool stepIfRunning);
simInt simExtCallScriptFunction_internal(simInt scriptHandleOrType, const simChar* functionNameAtScriptName,
                                         const simInt* inIntData, simInt inIntCnt,
                                         const simFloat* inFloatData, simInt inFloatCnt,
                                         const simChar** inStringData, simInt inStringCnt,
                                         const simChar* inBufferData, simInt inBufferCnt,
                                         simInt** outIntData, simInt* outIntCnt,
                                         simFloat** outFloatData, simInt* outFloatCnt,
                                         simChar*** outStringData, simInt* outStringCnt,
                                         simChar** outBufferData, simInt* outBufferSize);

#include "simInternal-old.h"

#endif // !defined(simInternal_INCLUDED_)
